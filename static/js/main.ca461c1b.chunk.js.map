{"version":3,"sources":["ecu.worker.js","components/SelectFirmware.js","components/CheckCompatible.js","components/FlashFirmware.js","components/Donate.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Worker","__webpack_public_path__","SelectFirmware","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","manufacturer","file","undefined","manufacturerChange","e","value","target","setState","onFileSelect","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","files","worker","postMessage","command","params","onReceiveFirmwareFile","stop","_x","apply","arguments","selectedFirmwareFile","name","classes","action","react_default","createElement","Button_default","href","color","size","Fragment","className","root","autoComplete","formWrapper","Grid_default","container","spacing","alignItems","item","xs","style","paddingBottom","FormControl_default","formControl","InputLabel_default","shrink","htmlFor","Select_default","onChange","inputProps","id","MenuItem_default","fullWidth","TextField_default","label","textField","InputProps","readOnly","InputLabelProps","margin","placeholder","_getFileName","type","accept","input","variant","component","SnackbarContent_default","snackbar","message","React","Component","withStyles","theme","subtitle","unit","marginBottom","minWidth","verticalAlign","display","CheckCompatible","firmwareValid","firmwareVersions","canAddress","softwareVersion","versionStatus","connected","_workerListener","event","data","result","supported","compatibleVersions","onReceiveCompatible","compatible","onReceiveSoftwareVersion","cmd","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","clickConnect","device","navigator","usb","requestDevice","filters","vendorId","sent","serialNumber","t0","code","abrupt","bool","version","status","greenAvatar","redAvatar","num","concat","toString","List_default","ListItem_default","Avatar_default","Check_default","Close_default","ListItemText_default","primary","secondary","_convertToValidStatus","DeviceHub_default","_convertToHex","_convertToVersionStatus","Build_default","_convertToSofwareVersion","disabled","onClick","backgroundColor","green","red","button","marginTop","marginLeft","FlashFirmware","last_progress_update","userAgreement","progress","success","Date","now","clickAgree","open","onReceiveUserAgreement","fontWeight","textAlign","Typography_default","gutterBottom","LinearProgress_default","Donate","method","donate","src","border","title","alt","width","height","paddingLeft","lineHeight","steps","App","activeStep","firmwareFile","ecuSoftwareVersion","ecuCompatible","flashing","enqueueSnackbar","autoHideDuration","getStepContent","step","components_SelectFirmware","components_CheckCompatible","components_FlashFirmware","Error","agreement","handleNext","handleBack","handleReset","EcuWorker","CssBaseline_default","AppBar_default","position","appBar","Toolbar_default","grow","noWrap","Memory_default","classNames","appBarLink","rel","IconButton_default","aria-label","SvgIcon_default","d","layout","Paper_default","paper","Stepper_default","stepper","map","Step_default","key","StepLabel_default","length","align","stepButtons","stepButton","_shouldStep","components_Donate","AppWithSnackbar","defineProperty","marginRight","breakpoints","up","flexGrow","dangerMessage","palette","error","dark","maxWidth","borderRadius","padding","justifyContent","withSnackbar","SnackbarProviderApp","build","maxSnack","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","src_App","document","getElementById","URL","process","origin","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"2IAAAA,EAAOC,QAAU,WACf,OAAO,IAAIC,OAAOC,IAA0B,gpBC4BxCC,eACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAKRQ,MAAQ,CACNC,aAAc,QACdC,UAAMC,GARWV,EAWnBW,mBAAqB,SAACC,GACpB,IAAIC,EAAQD,EAAEE,OAAOD,MACrBb,EAAKe,SAAS,SAAAR,GAAK,MAAK,CAAEC,aAAcK,MAbvBb,EAgBnBgB,aAhBmB,eAAAC,EAAAhB,OAAAiB,EAAA,EAAAjB,CAAAkB,EAAAC,EAAAC,KAgBJ,SAAAC,EAAOV,GAAP,IAAAH,EAAA,OAAAU,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACTjB,EAAOG,EAAEE,OAAOa,MAAM,GAC1B3B,EAAKe,SAAS,SAAAR,GAAK,MAAK,CAAEE,KAAMA,KAChCT,EAAKD,MAAM6B,OAAOC,YAAY,CAAEC,QAAS,oBAAqBC,OAAQtB,IACtET,EAAKD,MAAMiC,sBAAsBvB,GAJpB,wBAAAe,EAAAS,SAAAX,EAAAnB,SAhBI,gBAAA+B,GAAA,OAAAjB,EAAAkB,MAAAhC,KAAAiC,YAAA,GAGjBpC,EAAKO,MAAME,KAAOV,EAAMsC,qBAHPrC,4EAuBNS,GACX,OAAOA,EAAOA,EAAK6B,KAAO,oCAGnB,IACCC,EAAYpC,KAAKJ,MAAjBwC,QAEFC,EACJC,EAAArB,EAAAsB,cAACC,EAAAvB,EAAD,CAAQwB,KAAK,yCAAyC9B,OAAO,SAAS+B,MAAM,YAAYC,KAAK,SAA7F,oBAKF,OACEL,EAAArB,EAAAsB,cAACD,EAAArB,EAAM2B,SAAP,KACEN,EAAArB,EAAAsB,cAAA,OAAKM,UAAWT,EAAQU,MACtBR,EAAArB,EAAAsB,cAAA,QAAMQ,aAAa,MAAMF,UAAWT,EAAQY,aAC1CV,EAAArB,EAAAsB,cAACU,EAAAhC,EAAD,CAAMiC,WAAS,EAACC,QAAS,GAAIC,WAAW,YACtCd,EAAArB,EAAAsB,cAACU,EAAAhC,EAAD,CAAMoC,MAAI,EAACC,GAAI,GAAIC,MAAO,CAACC,cAAe,IACxClB,EAAArB,EAAAsB,cAACkB,EAAAxC,EAAD,CAAa4B,UAAWT,EAAQsB,aAC9BpB,EAAArB,EAAAsB,cAACoB,EAAA1C,EAAD,CAAY2C,QAAM,EAACC,QAAQ,uBAA3B,gBAGAvB,EAAArB,EAAAsB,cAACuB,GAAA7C,EAAD,CACE8C,SAAU/D,KAAKQ,mBACfE,MAAOV,KAAKI,MAAMC,aAClB2D,WAAY,CACV7B,KAAM,eACN8B,GAAI,wBAGN3B,EAAArB,EAAAsB,cAAC2B,GAAAjD,EAAD,CAAUP,MAAM,SAAhB,YAIN4B,EAAArB,EAAAsB,cAACU,EAAAhC,EAAD,CAAMoC,MAAI,EAACC,GAAI,GACbhB,EAAArB,EAAAsB,cAACkB,EAAAxC,EAAD,CAAa4B,UAAWT,EAAQsB,YAAaS,WAAW,GACtD7B,EAAArB,EAAAsB,cAAC6B,GAAAnD,EAAD,CACEgD,GAAG,qBACHI,MAAM,gBACNxB,UAAWT,EAAQkC,UACnBH,WAAW,EACXI,WAAY,CACVC,UAAU,GAEZC,gBAAiB,CACfb,QAAQ,GAEVc,OAAO,QACPC,YAAY,mBACZjE,MAAOV,KAAK4E,aAAa5E,KAAKI,MAAME,UAI1CgC,EAAArB,EAAAsB,cAACU,EAAAhC,EAAD,CAAMoC,MAAI,EAACC,GAAI,GACbhB,EAAArB,EAAAsB,cAACkB,EAAAxC,EAAD,CAAa4B,UAAWT,EAAQsB,aAC9BpB,EAAArB,EAAAsB,cAAA,SAAOsC,KAAK,OAAOZ,GAAG,uBAAuBF,SAAU/D,KAAKa,aAAciE,OAAO,OAAOjC,UAAWT,EAAQ2C,QAC3GzC,EAAArB,EAAAsB,cAAA,SAAOsB,QAAQ,wBACbvB,EAAArB,EAAAsB,cAACC,EAAAvB,EAAD,CAAQ+D,QAAQ,YAAYtC,MAAM,YAAYuC,UAAU,QAAxD,kBAIN3C,EAAArB,EAAAsB,cAACU,EAAAhC,EAAD,CAAMoC,MAAI,EAACC,GAAI,IACbhB,EAAArB,EAAAsB,cAAC2C,GAAAjE,EAAD,CAAiB4B,UAAWT,EAAQ+C,SAAUC,QAAQ,gCAAgC/C,OAAQA,gBAvFjFgD,IAAMC,WAuGpBC,OAxHA,SAAAC,GAAK,MAAK,CACvBC,SAAU,CACRjC,cAAegC,EAAMrC,QAAQuC,MAE/B1C,YAAa,CACX2C,aAAmC,EAArBH,EAAMrC,QAAQuC,MAE9BhC,YAAa,CACXgB,OAAQc,EAAMrC,QAAQuC,KACtBE,SAAU,IACVC,cAAe,YAEjBd,MAAO,CACLe,QAAS,UA2GEP,CAAmB5F,gNCjG5BoG,8MACJ3F,MAAQ,CACN4F,mBAAezF,EACf0F,sBAAkB1F,EAClB2F,WAAY,GACZC,qBAAiB5F,EACjB6F,mBAAe7F,EACf8F,WAAW,KAGbC,gBAAkB,SAACC,GACjB,GAAKA,GAAUA,EAAMC,KAArB,CAIA,IAAI7E,EAAU4E,EAAMC,KAAK7E,QACrB8E,EAASF,EAAMC,KAAKC,OAExB,OAAQ9E,GACN,IAAK,oBACH9B,EAAKe,SAAS,SAAAR,GAAK,MAAK,CACtB4F,cAAeS,EAAOC,UACtBT,iBAAkBQ,EAAOE,mBACzBT,WAAYO,EAAOP,cAErBrG,EAAKD,MAAMgH,oBAAoBH,EAAOC,WAAaD,EAAOP,YAAcrG,EAAKO,MAAMgG,eACnF,MACF,IAAK,UACHvG,EAAKD,MAAM6B,OAAOC,YAAY,CAAEC,QAAS,wBACpC8E,GACH5G,EAAKe,SAAS,SAAAR,GAAK,MAAK,CAAEiG,WAAW,KAEvC,MACF,IAAK,sBACH,IAAIQ,KAAgBhH,EAAKO,MAAM6F,mBAAoBpG,EAAKO,MAAM6F,iBAAiBQ,IAC/E5G,EAAKe,SAAS,SAAAR,GAAK,MAAK,CACtB+F,gBAAiBM,EACjBL,cAAeS,KAEjBhH,EAAKD,MAAMkH,yBAAyBL,GACpC5G,EAAKD,MAAMgH,oBAAoB/G,EAAKO,MAAM4F,eAAiBnG,EAAKO,MAAM8F,YAAcW,GACpF,MACF,IAAK,QACgB,YAAfJ,EAAOM,KACTlH,EAAKe,SAAS,SAAAR,GAAK,MAAK,CACtB+F,qBAAiB5F,EACjB6F,mBAAe7F,EACf8F,WAAW,UASrBW,kBAAoB,WAClBnH,EAAKD,MAAM6B,OAAOwF,iBAAiB,UAAWpH,EAAKyG,iBACnDzG,EAAKD,MAAM6B,OAAOC,YAAY,CAAEC,QAAS,yBAG3CuF,qBAAuB,WACrBrH,EAAKD,MAAM6B,OAAO0F,oBAAoB,UAAWtH,EAAKyG,oBAGxDc,kCAAe,SAAAjG,IAAA,IAAAkG,EAAA,OAAArG,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGQ+F,UAAUC,IAAIC,cAAc,CAC7CC,QAAS,CAAC,CAAEC,SAAU,UAJb,OAGPL,EAHOhG,EAAAsG,KAMX9H,EAAKe,SAAS,SAAAR,GAAK,MAAK,CAAEiG,WAAW,KACrCxG,EAAKD,MAAM6B,OAAOC,YAAY,CAAEC,QAAS,UAAWC,OAAQyF,EAAOO,eAPxDvG,EAAAE,KAAA,mBAAAF,EAAAC,KAAA,EAAAD,EAAAwG,GAAAxG,EAAA,SASI,kBAAXA,EAAAwG,GAAE1F,MAAuC,IAAXd,EAAAwG,GAAEC,KATzB,CAAAzG,EAAAE,KAAA,gBAAAF,EAAA0G,OAAA,wBAAA1G,EAAAwG,GAAA,yBAAAxG,EAAAS,SAAAX,EAAAnB,KAAA,iGAiBOgI,GACpB,OAAOA,EAAO,YAAc,+DAGL3B,EAAW4B,GAClC,OAAI5B,QAAyB9F,IAAZ0H,EACR,sBAEO1H,IAAZ0H,EACK,uBAGFA,GAAW,4DAGIC,GACtB,YAAe3H,IAAX2H,EACK,GAEFA,EAASlI,KAAKJ,MAAMwC,QAAQ+F,YAAcnI,KAAKJ,MAAMwC,QAAQgG,gDAGxDC,GACZ,OAAOA,EAAG,KAAAC,OAAQD,EAAIE,SAAS,KAAQ,oCAGhC,IACCnG,EAAYpC,KAAKJ,MAAjBwC,QAER,OACEE,EAAArB,EAAAsB,cAACiG,GAAAvH,EAAD,CAAM4B,UAAWT,EAAQU,MACvBR,EAAArB,EAAAsB,cAACkG,GAAAxH,EAAD,KAEEjB,KAAKI,MAAM4F,cACP1D,EAAArB,EAAAsB,cAACmG,GAAAzH,EAAD,CAAQ4B,UAAWT,EAAQ+F,aAAa7F,EAAArB,EAAAsB,cAACoG,GAAA1H,EAAD,OAExCqB,EAAArB,EAAAsB,cAACmG,GAAAzH,EAAD,CAAQ4B,UAAWT,EAAQgG,WAAW9F,EAAArB,EAAAsB,cAACqG,GAAA3H,EAAD,OAG1CqB,EAAArB,EAAAsB,cAACsG,GAAA5H,EAAD,CAAc6H,QAAQ,kBAAkBC,UAAW/I,KAAKgJ,sBAAsBhJ,KAAKI,MAAM4F,kBAC3F1D,EAAArB,EAAAsB,cAACkG,GAAAxH,EAAD,KACEqB,EAAArB,EAAAsB,cAACmG,GAAAzH,EAAD,CAAQ4B,eAAqCtC,IAA1BP,KAAKI,MAAM8F,WAA2B9D,EAAQgG,UAAYhG,EAAQ+F,aACnF7F,EAAArB,EAAAsB,cAAC0G,GAAAhI,EAAD,OAEFqB,EAAArB,EAAAsB,cAACsG,GAAA5H,EAAD,CAAc6H,QAAQ,cAAcC,UAAW/I,KAAKkJ,cAAclJ,KAAKI,MAAM8F,eAE/E5D,EAAArB,EAAAsB,cAACkG,GAAAxH,EAAD,KACEqB,EAAArB,EAAAsB,cAACmG,GAAAzH,EAAD,CAAQ4B,UAAW7C,KAAKmJ,wBAAwBnJ,KAAKI,MAAMgG,gBACzD9D,EAAArB,EAAAsB,cAAC6G,GAAAnI,EAAD,OAEFqB,EAAArB,EAAAsB,cAACsG,GAAA5H,EAAD,CAAc6H,QAAQ,mBAAmBC,UAAW/I,KAAKqJ,yBAAyBrJ,KAAKI,MAAMiG,UAAWrG,KAAKI,MAAM+F,mBACnH7D,EAAArB,EAAAsB,cAACC,EAAAvB,EAAD,CAAQ+D,QAAQ,YAAYtC,MAAM,YAAY4G,SAAUtJ,KAAKI,MAAMiG,UAAWkD,QAASvJ,KAAKoH,cAA5F,2BArIoB/B,IAAMC,WAmJrBC,OArKA,SAAAC,GAAK,MAAK,CACvBC,SAAU,CACRjC,cAAegC,EAAMrC,QAAQuC,MAE/ByC,YAAa,CACXzF,MAAO,OACP8G,gBAAiBC,KAAM,MAEzBrB,UAAW,CACT1F,MAAO,OACP8G,gBAAiBE,KAAI,MAEvBC,OAAQ,CACNC,UAAgC,EAArBpE,EAAMrC,QAAQuC,KACzBmE,WAAYrE,EAAMrC,QAAQuC,QAuJfH,CAAmBQ,yBC1K5B+D,8MACJC,qBAAuB,IAEvB3J,MAAQ,CACN4J,eAAe,EACf9B,YAAQ3H,EACR0J,cAAU1J,EACV2J,aAAS3J,KAGX+F,gBAAkB,SAACC,GACjB,GAAKA,GAAUA,EAAMC,KAArB,CAIA,IAAI7E,EAAU4E,EAAMC,KAAK7E,QACrB8E,EAASF,EAAMC,KAAKC,OAExB,OAAQ9E,GACN,IAAK,QACH9B,EAAKe,SAAS,SAAAR,GAAK,MAAK,CAAC8J,QAASzD,KAClC,MACF,IAAK,eACH5G,EAAKe,SAAS,SAAAR,GAAK,MAAK,CAAC8H,OAAQzB,KACjC,MACF,IAAK,kBAEY,MAAXA,GAAkB0D,KAAKC,MAAQvK,EAAKkK,qBAAuB,OAC7DlK,EAAKe,SAAS,SAAAR,GAAK,MAAK,CAAC6J,SAAUxD,KACnC5G,EAAKkK,qBAAuBI,KAAKC,YAQzCpD,kBAAoB,WAClBnH,EAAKD,MAAM6B,OAAOwF,iBAAiB,UAAWpH,EAAKyG,oBAGrDY,qBAAuB,WACrBrH,EAAKD,MAAM6B,OAAO0F,oBAAoB,UAAWtH,EAAKyG,oBAGxD+D,WAAa,WACXxK,EAAKe,SAAS,SAAAR,GAAK,MAAK,CACtBkK,MAAM,EACNN,eAAe,EACf9B,OAAQ,GACR+B,SAAU,KAEZpK,EAAKD,MAAM2K,wBAAuB,4EAG3B,IACCnI,EAAYpC,KAAKJ,MAAjBwC,QAER,OACEE,EAAArB,EAAAsB,cAACD,EAAArB,EAAM2B,SAAP,KACEN,EAAArB,EAAAsB,cAACU,EAAAhC,EAAD,CAAMiC,WAAS,EAACC,QAAS,IACvBb,EAAArB,EAAAsB,cAACU,EAAAhC,EAAD,CAAMoC,MAAI,EAACC,GAAI,IACbhB,EAAArB,EAAAsB,cAAC2C,GAAAjE,EAAD,CAAiB4B,UAAWT,EAAQ+C,SAAU5B,MAAO,CAACiH,WAAY,OAAQC,UAAW,UAAWrF,QAAQ,gBAE1G9C,EAAArB,EAAAsB,cAACU,EAAAhC,EAAD,CAAMoC,MAAI,EAACC,GAAI,IACbhB,EAAArB,EAAAsB,cAAA,UACED,EAAArB,EAAAsB,cAAA,UACED,EAAArB,EAAAsB,cAACmI,EAAAzJ,EAAD,CAAY+D,QAAQ,QAAQ2F,cAAY,GAAxC,+DAEFrI,EAAArB,EAAAsB,cAAA,UACED,EAAArB,EAAAsB,cAACmI,EAAAzJ,EAAD,CAAY+D,QAAQ,QAAQ2F,cAAY,GAAxC,qEAEFrI,EAAArB,EAAAsB,cAAA,UACED,EAAArB,EAAAsB,cAACmI,EAAAzJ,EAAD,CAAY+D,QAAQ,QAAQ2F,cAAY,GAAxC,yEAEFrI,EAAArB,EAAAsB,cAAA,UACED,EAAArB,EAAAsB,cAACmI,EAAAzJ,EAAD,CAAY+D,QAAQ,QAAQ2F,cAAY,GAAxC,mFAEFrI,EAAArB,EAAAsB,cAAA,UACED,EAAArB,EAAAsB,cAACmI,EAAAzJ,EAAD,CAAY+D,QAAQ,QAAQ2F,cAAY,GAAxC,sFAINrI,EAAArB,EAAAsB,cAACU,EAAAhC,EAAD,CAAMoC,MAAI,EAACC,GAAI,IACbhB,EAAArB,EAAAsB,cAACC,EAAAvB,EAAD,CAAQ+D,QAAQ,YAAYtC,MAAM,YAAYyB,WAAS,EAACmF,SAAUtJ,KAAKI,MAAM4J,cAAeT,QAASvJ,KAAKqK,YAA1G,2BAEF/H,EAAArB,EAAAsB,cAACU,EAAAhC,EAAD,CAAMoC,MAAI,EAACC,GAAI,IACXtD,KAAKI,MAAM8H,OAAS5F,EAAArB,EAAAsB,cAAA,WAAS,IAEjCD,EAAArB,EAAAsB,cAACU,EAAAhC,EAAD,CAAMoC,MAAI,EAACC,GAAI,IACXtD,KAAKI,MAAM8H,OAAS5F,EAAArB,EAAAsB,cAACmI,EAAAzJ,EAAD,CAAY+D,QAAQ,aAAahF,KAAKI,MAAM8H,QAAuB,IAE3F5F,EAAArB,EAAAsB,cAACU,EAAAhC,EAAD,CAAMoC,MAAI,EAACC,GAAI,IACXtD,KAAKI,MAAM8H,OAAS5F,EAAArB,EAAAsB,cAACqI,GAAA3J,EAAD,CAAgByB,MAAM,YAAYsC,QAAQ,cAActE,MAAOV,KAAKI,MAAM6J,WAAe,aA7F/F5E,IAAMC,WA2GnBC,OA9GA,SAAAC,GAAK,MAAK,IA8GVD,CAAmBuE,IC3G5Be,oLACK,IACCzI,EAAYpC,KAAKJ,MAAjBwC,QACR,OACEE,EAAArB,EAAAsB,cAACD,EAAArB,EAAM2B,SAAP,KACEN,EAAArB,EAAAsB,cAAA,QAAMF,OAAO,wCAAwCyI,OAAO,OAAOnK,OAAO,SAASkC,UAAWT,EAAQ2I,QACpGzI,EAAArB,EAAAsB,cAAA,SAAOsC,KAAK,SAAS1C,KAAK,MAAMzB,MAAM,cACtC4B,EAAArB,EAAAsB,cAAA,SAAOsC,KAAK,SAAS1C,KAAK,mBAAmBzB,MAAM,kBACnD4B,EAAArB,EAAAsB,cAAA,SAAO0B,GAAG,gBAAgBY,KAAK,QAAQmG,IAAI,8DAA8DC,OAAO,IAAI9I,KAAK,SAAS+I,MAAM,gDAAgDC,IAAI,8BAC5L7I,EAAArB,EAAAsB,cAAA,OAAK4I,IAAI,GAAGF,OAAO,IAAID,IAAI,+CAA+CI,MAAM,IAAIC,OAAO,MAC3F/I,EAAArB,EAAAsB,cAAA,SAAOsB,QAAQ,gBAAgBN,MAAO,CAAC+H,YAAa,QAApD,2EAVWjG,IAAMC,WAqBZC,OA7BA,SAAAC,GAAK,MAAK,CACvBuF,OAAQ,CACNjF,QAAS,OACT1C,WAAY,SACZmI,WAAY,SAyBDhG,CAAmBsF,IC4C5BW,GAAQ,CAAC,SAAU,WAAY,SAE/BC,eACJ,SAAAA,EAAY7L,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyL,IACjB5L,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2L,GAAAtL,KAAAH,KAAMJ,KAKRQ,MAAQ,CACNsL,WAAY,EACZC,kBAAcpL,EACdqL,wBAAoBrL,EACpBsL,mBAAetL,EACfyJ,eAAe,EACf8B,UAAU,GAZOjM,EAenByG,gBAAkB,SAACC,GACjB,GAAKA,GAAUA,EAAMC,KAArB,CAIA,IAAI7E,EAAU4E,EAAMC,KAAK7E,QACrB8E,EAASF,EAAMC,KAAKC,OAExB,OAAQ9E,GACN,IAAK,QACH9B,EAAKD,MAAMmM,gBAAgBtF,EAAOrB,QAAS,CACzCJ,QAAS,QACTgH,iBAAkB,SA3BPnM,EAmCnBmH,kBAAoB,WAClBnH,EAAK4B,OAAOwF,iBAAiB,UAAWpH,EAAKyG,kBApC5BzG,EAuCnBqH,qBAAuB,WACrBrH,EAAK4B,OAAO0F,oBAAoB,UAAWtH,EAAKyG,kBAxC/BzG,EA2CnBoM,eAAiB,SAACC,GAChB,OAAQA,GACN,KAAK,EACH,OAAO5J,EAAArB,EAAAsB,cAAC4J,GAAD,CAAgB1K,OAAQ5B,EAAK4B,OAAQS,qBAAsBrC,EAAKO,MAAMuL,aAAc9J,sBAAuBhC,EAAKgC,wBACzH,KAAK,EACH,OAAOS,EAAArB,EAAAsB,cAAC6J,GAAD,CAAiB3K,OAAQ5B,EAAK4B,OAAQqF,yBAA0BjH,EAAKiH,yBAA0BF,oBAAqB/G,EAAK+G,sBAClI,KAAK,EACH,OAAOtE,EAAArB,EAAAsB,cAAC8J,GAAD,CAAe5K,OAAQ5B,EAAK4B,OAAQ8I,uBAAwB1K,EAAK0K,yBAC1E,QACE,MAAM,IAAI+B,MAAM,kBApDHzM,EAwDnBgC,sBAAwB,SAACvB,GACvBT,EAAKe,SAAS,SAAAR,GAAK,MAAK,CACtBuL,aAAcrL,EACdsL,wBAAoBrL,EACpBsL,mBAAetL,EACfyJ,eAAe,EACf8B,UAAU,MA9DKjM,EAkEnBiH,yBAA2B,SAACX,GAC1BtG,EAAKe,SAAS,SAAAR,GAAK,MAAK,CACtBwL,mBAAoBzF,EACpB0F,mBAAetL,EACfyJ,eAAe,EACf8B,UAAU,MAvEKjM,EA2EnB+G,oBAAsB,SAACC,GACrBhH,EAAKe,SAAS,SAAAR,GAAK,MAAK,CACtByL,cAAehF,EACfmD,eAAe,EACf8B,UAAU,MA/EKjM,EAmFnB0K,uBAAyB,SAACgC,GACxB1M,EAAKe,SAAS,SAAAR,GAAK,MAAK,CACtB4J,cAAeuC,EACfT,UAAU,MAtFKjM,EA0FnB2M,WA1FmB1M,OAAAiB,EAAA,EAAAjB,CAAAkB,EAAAC,EAAAC,KA0FN,SAAAC,IAAA,OAAAH,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACmB,IAA1B1B,EAAKO,MAAMsL,WADJ,CAAArK,EAAAE,KAAA,eAET1B,EAAKe,SAAS,SAAAR,GAAK,MAAK,CACtB0L,UAAU,KAEZjM,EAAK4B,OAAOC,YAAY,CAAEC,QAAS,UAL1BN,EAAA0G,OAAA,iBASXlI,EAAKe,SAAS,SAAAR,GAAK,MAAK,CACtBsL,WAAYtL,EAAMsL,WAAa,KAVtB,wBAAArK,EAAAS,SAAAX,EAAAnB,SA1FMH,EAwGnB4M,WAAa,WACX5M,EAAKe,SAAS,SAAAR,GAAK,MAAK,CACtBsL,WAAYtL,EAAMsL,WAAa,MA1GhB7L,EA8GnB6M,YAAc,WACZ7M,EAAKe,SAAS,CACZ8K,WAAY,KA7Gd7L,EAAK4B,OAAS,IAAIkL,IAHD9M,6EAqHjB,OAA8B,IAA1BG,KAAKI,MAAMsL,aAAqB1L,KAAKI,MAAMuL,eAGZ,IAA1B3L,KAAKI,MAAMsL,aAAqB1L,KAAKI,MAAMyL,iBAGjB,IAA1B7L,KAAKI,MAAMsL,YAAsB1L,KAAKI,MAAM4J,gBAAiBhK,KAAKI,MAAM0L,4CAM1E,IACC1J,EAAYpC,KAAKJ,MAAjBwC,QACAsJ,EAAe1L,KAAKI,MAApBsL,WAER,OACEpJ,EAAArB,EAAAsB,cAACD,EAAArB,EAAM2B,SAAP,KACEN,EAAArB,EAAAsB,cAACqK,EAAA3L,EAAD,MACAqB,EAAArB,EAAAsB,cAACsK,EAAA5L,EAAD,CAAQ6L,SAAS,WAAWjK,UAAWT,EAAQ2K,QAC7CzK,EAAArB,EAAAsB,cAACyK,EAAA/L,EAAD,KACEqB,EAAArB,EAAAsB,cAACmI,EAAAzJ,EAAD,CAAY+D,QAAQ,KAAKtC,MAAM,UAAUG,UAAWT,EAAQ6K,KAAMC,QAAM,GACtE5K,EAAArB,EAAAsB,cAAC4K,EAAAlM,EAAD,CAAY4B,UAAWuK,IAAW,iBADpC,6CAC+F9K,EAAArB,EAAAsB,cAAA,KAAGM,UAAWT,EAAQiL,WAAY1M,OAAO,QAAQ8B,KAAK,sDAAtD,SAD/F,KAGAH,EAAArB,EAAAsB,cAAA,KAAGE,KAAK,wCAAwC9B,OAAO,SAAS2M,IAAI,sBAAsBpC,MAAM,qBAC9F5I,EAAArB,EAAAsB,cAACgL,EAAAtM,EAAD,CACE4B,UAAWT,EAAQuH,OACnB6D,aAAW,qBAEXlL,EAAArB,EAAAsB,cAACkL,EAAAxM,EAAD,CAASsC,MAAO,CAACb,MAAO,UACtBJ,EAAArB,EAAAsB,cAAA,QAAMmL,EAAE,kZAMlBpL,EAAArB,EAAAsB,cAAA,QAAMM,UAAWT,EAAQuL,QACvBrL,EAAArB,EAAAsB,cAACqL,EAAA3M,EAAD,CAAO4B,UAAWT,EAAQyL,OACxBvL,EAAArB,EAAAsB,cAACuL,EAAA7M,EAAD,CAASyK,WAAYA,EAAY7I,UAAWT,EAAQ2L,SACjDvC,GAAMwC,IAAI,SAAA3J,GAAK,OACd/B,EAAArB,EAAAsB,cAAC0L,EAAAhN,EAAD,CAAMiN,IAAK7J,GACT/B,EAAArB,EAAAsB,cAAC4L,EAAAlN,EAAD,KAAYoD,OAIlB/B,EAAArB,EAAAsB,cAACD,EAAArB,EAAM2B,SAAP,KACG8I,IAAeF,GAAM4C,OACpB9L,EAAArB,EAAAsB,cAACD,EAAArB,EAAM2B,SAAP,KACEN,EAAArB,EAAAsB,cAACmI,EAAAzJ,EAAD,CAAY+D,QAAQ,KAAKqJ,MAAM,SAAS1D,cAAY,GAApD,cAKFrI,EAAArB,EAAAsB,cAACD,EAAArB,EAAM2B,SAAP,KACG5C,KAAKiM,eAAeP,GACrBpJ,EAAArB,EAAAsB,cAAA,OAAKM,UAAWT,EAAQkM,aAEpBhM,EAAArB,EAAAsB,cAACC,EAAAvB,EAAD,CAAQsI,QAASvJ,KAAKyM,WAAY5J,UAAWT,EAAQmM,WAAYjF,SAAyB,IAAfoC,GAAmC,IAAfA,GAA/F,QAIFpJ,EAAArB,EAAAsB,cAACC,EAAAvB,EAAD,CACE+D,QAAQ,YACRtC,MAAM,UACN6G,QAASvJ,KAAKwM,WACd3J,UAAWT,EAAQmM,WACnBjF,SAAUtJ,KAAKwO,eAEG,IAAf9C,EAAoB,iBAAmB,YAOtDpJ,EAAArB,EAAAsB,cAACkM,GAAD,eAjMQpJ,IAAMC,WA6MlBoJ,GAAkBnJ,IAnQT,SAAAC,GAAK,MAAK,CACvBuH,OAAQ,CACND,SAAU,YAEZO,WAAY,CACV3K,MAAO,OAETiL,OAAO7N,OAAA6O,EAAA,EAAA7O,CAAA,CACLsL,MAAO,OACPxF,SAAU,QACViE,WAAiC,EAArBrE,EAAMrC,QAAQuC,KAC1BkJ,YAAkC,EAArBpJ,EAAMrC,QAAQuC,KAC3BC,aAAmC,EAArBH,EAAMrC,QAAQuC,MAC3BF,EAAMqJ,YAAYC,GAAG,IAA2B,EAArBtJ,EAAMrC,QAAQuC,KAAW,GAAK,CACxD0F,MAAO,IACPvB,WAAY,OACZ+E,YAAa,SAGjB3B,KAAM,CACJ8B,SAAU,GAEZC,cAAe,CACbxE,WAAY,OACZhB,gBAAiBhE,EAAMyJ,QAAQC,MAAMC,KACrCvJ,SAAU,QACVwJ,SAAU,QACVC,aAAc,GAEhBxB,MAAM/N,OAAA6O,EAAA,EAAA7O,CAAA,CACJ8J,UAAgC,EAArBpE,EAAMrC,QAAQuC,KACzBC,aAAmC,EAArBH,EAAMrC,QAAQuC,KAC5B4J,QAA8B,EAArB9J,EAAMrC,QAAQuC,MACtBF,EAAMqJ,YAAYC,GAAG,IAA2B,EAArBtJ,EAAMrC,QAAQuC,KAAW,GAAK,CACxDkE,UAAgC,EAArBpE,EAAMrC,QAAQuC,KACzBC,aAAmC,EAArBH,EAAMrC,QAAQuC,KAC5B4J,QAA8B,EAArB9J,EAAMrC,QAAQuC,OAG3BqI,QAAS,CACPuB,QAAO,GAAAhH,OAA0B,EAArB9C,EAAMrC,QAAQuC,KAAnB,SAAA4C,OAAwD,EAArB9C,EAAMrC,QAAQuC,KAAjD,OAET4I,YAAa,CACXxI,QAAS,OACTyJ,eAAgB,YAElBhB,WAAY,CACV3E,UAAgC,EAArBpE,EAAMrC,QAAQuC,KACzBmE,WAAYrE,EAAMrC,QAAQuC,QAmNNH,CAAmBiK,uBAAa/D,KAiBzCgE,OAff,WACE,OACEnN,EAAArB,EAAAsB,cAACmN,EAAA,iBAAD,CACEC,SAAU,EACVtN,OAAQ,CACNC,EAAArB,EAAAsB,cAACC,EAAAvB,EAAD,CAAQ+D,QAAQ,YAAYrC,KAAK,SAAjC,aAKFL,EAAArB,EAAAsB,cAACmM,GAAD,QC5RAkB,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9B9I,UAAU+I,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBtQ,QACfkH,UAAU+I,cAAcQ,YAI1BC,QAAQC,IACN,gHAKEX,GAAUA,EAAOY,UACnBZ,EAAOY,SAASR,KAMlBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACnBb,EAAOa,UAAUT,UAO5BU,MAAM,SAAAhC,GACL4B,QAAQ5B,MAAM,4CAA6CA,KC1FjEiC,IAASC,OAAO9O,EAAArB,EAAAsB,cAAC8O,GAAD,MAASC,SAASC,eAAe,SDgB1C,SAAkBnB,GACvB,GAA6C,kBAAmB9I,UAAW,CAGzE,GADkB,IAAIkK,IAAIC,GAAwB3B,OAAOC,SAAStN,MACpDiP,SAAW5B,OAAOC,SAAS2B,OAIvC,OAGF5B,OAAO7I,iBAAiB,OAAQ,WAC9B,IAAMkJ,EAAK,GAAA7H,OAAMmJ,GAAN,sBAEP7B,IAgEV,SAAiCO,EAAOC,GAEtCuB,MAAMxB,GACHI,KAAK,SAAAqB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAAS1J,QACO,MAAf2J,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C1K,UAAU+I,cAAc4B,MAAM1B,KAAK,SAAAC,GACjCA,EAAa0B,aAAa3B,KAAK,WAC7BT,OAAOC,SAASoC,aAKpBjC,GAAgBC,EAAOC,KAG1Bc,MAAM,WACLJ,QAAQC,IACN,mEArFAqB,CAAwBjC,EAAOC,GAI/B9I,UAAU+I,cAAc4B,MAAM1B,KAAK,WACjCO,QAAQC,IACN,+GAMJb,GAAgBC,EAAOC,MCvC/BC","file":"static/js/main.ca461c1b.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"3794ea3f95b8f4199e55.worker.js\");\n};","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport withStyles      from '@material-ui/core/styles/withStyles';\nimport Grid            from '@material-ui/core/Grid'\nimport FormControl     from '@material-ui/core/FormControl';\nimport InputLabel      from '@material-ui/core/InputLabel';\nimport Select          from '@material-ui/core/Select';\nimport MenuItem        from '@material-ui/core/MenuItem';\nimport Button          from '@material-ui/core/Button';\nimport TextField       from '@material-ui/core/TextField';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nconst styles = theme => ({\n  subtitle: {\n    paddingBottom: theme.spacing.unit,\n  },\n  formWrapper: {\n    marginBottom: theme.spacing.unit * 2,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n    verticalAlign: 'baseline',\n  },\n  input: {\n    display: 'none',\n  },\n});\n\nclass SelectFirmware extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state.file = props.selectedFirmwareFile\n  }\n\n  state = {\n    manufacturer: \"honda\", // only one supported right now\n    file: undefined,\n  }\n\n  manufacturerChange = (e) => {\n    let value = e.target.value\n    this.setState(state => ({ manufacturer: value }))\n  }\n\n  onFileSelect = async (e) => {\n    var file = e.target.files[0]\n    this.setState(state => ({ file: file }))\n    this.props.worker.postMessage({ command: 'set-firmware-file', params: file })\n    this.props.onReceiveFirmwareFile(file)\n  }\n\n  _getFileName(file) {\n    return file ? file.name : \"\"\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    const action = (\n      <Button href=\"https://github.com/gregjhogan/rwd-xray\" target=\"_blank\" color=\"secondary\" size=\"small\">\n        More Information\n      </Button>\n    );\n\n    return (\n      <React.Fragment>\n        <div className={classes.root}>\n          <form autoComplete=\"off\" className={classes.formWrapper}>\n            <Grid container spacing={16} alignItems='baseline'>\n              <Grid item xs={12} style={{paddingBottom: 0}}>\n                <FormControl className={classes.formControl}>\n                  <InputLabel shrink htmlFor=\"manufacturer-select\">\n                    Manufacturer\n                  </InputLabel>\n                  <Select\n                    onChange={this.manufacturerChange}\n                    value={this.state.manufacturer}\n                    inputProps={{\n                      name: 'manufacturer',\n                      id: 'manufacturer-select',\n                    }}\n                  >\n                    <MenuItem value=\"honda\">Honda</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={9}>\n                <FormControl className={classes.formControl} fullWidth={true}>\n                  <TextField\n                    id=\"firmware-text-file\"\n                    label=\"Firmware File\"\n                    className={classes.textField}\n                    fullWidth={true}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    margin=\"dense\"\n                    placeholder=\"no file selected\"\n                    value={this._getFileName(this.state.file)}\n                  />\n                </FormControl>\n              </Grid>\n              <Grid item xs={3}>\n                <FormControl className={classes.formControl}>\n                  <input type=\"file\" id=\"firmware-button-file\" onChange={this.onFileSelect} accept=\".rwd\" className={classes.input} />\n                  <label htmlFor=\"firmware-button-file\">\n                    <Button variant=\"contained\" color=\"secondary\" component=\"span\">Select File</Button>\n                  </label>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12}>\n                <SnackbarContent className={classes.snackbar} message=\"Find out more about RWD files\" action={action} />\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nSelectFirmware.propTypes = {\n  classes: PropTypes.object.isRequired,\n  worker: PropTypes.object.isRequired,\n  onReceiveFirmwareFile: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(SelectFirmware);\n","import React         from 'react';\nimport PropTypes     from 'prop-types';\nimport Avatar        from '@material-ui/core/Avatar';\nimport BuildIcon     from '@material-ui/icons/Build';\n\nimport CheckIcon     from '@material-ui/icons/Check';\nimport CloseIcon     from '@material-ui/icons/Close';\nimport DeviceHubIcon from '@material-ui/icons/DeviceHub';\nimport List          from '@material-ui/core/List';\nimport ListItem      from '@material-ui/core/ListItem';\nimport ListItemText  from '@material-ui/core/ListItemText';\nimport withStyles    from '@material-ui/core/styles/withStyles';\n\nimport green         from '@material-ui/core/colors/green';\nimport red           from '@material-ui/core/colors/red';\nimport Button        from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  subtitle: {\n    paddingBottom: theme.spacing.unit,\n  },\n  greenAvatar: {\n    color: '#fff',\n    backgroundColor: green[500],\n  },\n  redAvatar: {\n    color: '#fff',\n    backgroundColor: red[500],\n  },\n  button: {\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit,\n  },\n});\n\nclass CheckCompatible extends React.Component {\n  state = {\n    firmwareValid: undefined,\n    firmwareVersions: undefined,\n    canAddress: '',\n    softwareVersion: undefined,\n    versionStatus: undefined,\n    connected: false,\n  }\n\n  _workerListener = (event) => {\n    if (!event || !event.data) {\n      return\n    }\n\n    var command = event.data.command\n    var result = event.data.result\n\n    switch (command) {\n      case 'get-firmware-info':\n        this.setState(state => ({\n          firmwareValid: result.supported,\n          firmwareVersions: result.compatibleVersions,\n          canAddress: result.canAddress,\n        }))\n        this.props.onReceiveCompatible(result.supported && result.canAddress && this.state.versionStatus)\n        break\n      case 'connect':\n        this.props.worker.postMessage({ command: 'get-app-software-id' })\n        if (!result) {\n          this.setState(state => ({ connected: false }))\n        }\n        break\n      case 'get-app-software-id':\n        let compatible = !!(this.state.firmwareVersions && this.state.firmwareVersions[result])\n        this.setState(state => ({\n          softwareVersion: result,\n          versionStatus: compatible,\n        }))\n        this.props.onReceiveSoftwareVersion(result)\n        this.props.onReceiveCompatible(this.state.firmwareValid && this.state.canAddress && compatible)\n        break\n      case 'error':\n        if (result.cmd === 'connect') {\n          this.setState(state => ({\n            softwareVersion: undefined,\n            versionStatus: undefined,\n            connected: false,\n          }))\n        }\n        break\n      default:\n        break\n    }\n  }\n\n  componentDidMount = () => {\n    this.props.worker.addEventListener('message', this._workerListener)\n    this.props.worker.postMessage({ command: 'get-firmware-info' })\n  }\n\n  componentWillUnmount = () => {\n    this.props.worker.removeEventListener('message', this._workerListener)\n  }\n\n  clickConnect = async () => {\n    // connecting to user device can only happen inside a click handler\n    try {\n      let device = await navigator.usb.requestDevice({\n        filters: [{ vendorId: 0xbbaa }]\n      });\n      this.setState(state => ({ connected: true }))\n      this.props.worker.postMessage({ command: 'connect', params: device.serialNumber })\n    } catch (e) {\n      if (e.name === 'NotFoundError' && e.code === 8) {\n        // cancel button clicked\n        return\n      }\n      throw e\n    }\n  }\n\n  _convertToValidStatus(bool) {\n    return bool ? 'Supported' : 'Unsupported'\n  }\n\n  _convertToSofwareVersion(connected, version) {\n    if (connected && version === undefined) {\n      return \"connecting ...\"\n    }\n    if (version === undefined) {\n      return \"not connected to ECU\"\n    }\n\n    return version || 'Not Found'\n  }\n\n  _convertToVersionStatus(status) {\n    if (status === undefined) {\n      return ''\n    }\n    return status ? this.props.classes.greenAvatar : this.props.classes.redAvatar\n  }\n\n  _convertToHex(num) {\n    return num ? `0x${num.toString(16)}` : ''\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <List className={classes.root}>\n        <ListItem>\n          {\n          this.state.firmwareValid ? (\n              <Avatar className={classes.greenAvatar}><CheckIcon /></Avatar>\n            ) : (\n              <Avatar className={classes.redAvatar}><CloseIcon /></Avatar>\n            )\n          }\n          <ListItemText primary=\"File Validation\" secondary={this._convertToValidStatus(this.state.firmwareValid)} /></ListItem>\n        <ListItem>\n          <Avatar className={this.state.canAddress === undefined ? classes.redAvatar : classes.greenAvatar}>\n            <DeviceHubIcon />\n          </Avatar>\n          <ListItemText primary=\"ECU Address\" secondary={this._convertToHex(this.state.canAddress)} />\n        </ListItem>\n        <ListItem>\n          <Avatar className={this._convertToVersionStatus(this.state.versionStatus)}>\n            <BuildIcon />\n          </Avatar>\n          <ListItemText primary=\"Software Version\" secondary={this._convertToSofwareVersion(this.state.connected, this.state.softwareVersion)} />\n          <Button variant=\"contained\" color=\"secondary\" disabled={this.state.connected} onClick={this.clickConnect}>Connect to ECU</Button>\n        </ListItem>\n      </List>\n    );\n  }\n}\n\nCheckCompatible.propTypes = {\n  classes: PropTypes.object.isRequired,\n  worker: PropTypes.object.isRequired,\n  onReceiveSoftwareVersion: PropTypes.func.isRequired,\n  onReceiveCompatible: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(CheckCompatible);\n","import React             from 'react';\nimport PropTypes         from 'prop-types';\nimport Button            from '@material-ui/core/Button';\nimport Grid              from '@material-ui/core/Grid';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport Typography        from '@material-ui/core/Typography';\nimport LinearProgress    from '@material-ui/core/LinearProgress';\nimport withStyles        from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n});\n\nclass FlashFirmware extends React.Component {\n  last_progress_update = 0\n\n  state = {\n    userAgreement: false,\n    status: undefined,\n    progress: undefined,\n    success: undefined,\n  }\n\n  _workerListener = (event) => {\n    if (!event || !event.data) {\n      return\n    }\n\n    var command = event.data.command\n    var result = event.data.result\n\n    switch (command) {\n      case 'flash':\n        this.setState(state => ({success: result}))\n        break\n      case 'flash-status':\n        this.setState(state => ({status: result}))\n        break\n      case 'flash-progress':\n        // rate limit progress updates to make progress bar smooth\n        if (result === 100 || Date.now() - this.last_progress_update > 500) {\n          this.setState(state => ({progress: result}))\n          this.last_progress_update = Date.now()\n        }\n        break\n      default:\n        break\n    }\n  }\n\n  componentDidMount = () => {\n    this.props.worker.addEventListener('message', this._workerListener)\n  }\n\n  componentWillUnmount = () => {\n    this.props.worker.removeEventListener('message', this._workerListener)\n  }\n\n  clickAgree = () => {\n    this.setState(state => ({\n      open: false,\n      userAgreement: true,\n      status: '',\n      progress: 0,\n    }))\n    this.props.onReceiveUserAgreement(true)\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <Grid container spacing={16}>\n          <Grid item xs={12}>\n            <SnackbarContent className={classes.snackbar} style={{fontWeight: 'bold', textAlign: 'center'}} message=\"DISCLAIMER\" />\n          </Grid>\n          <Grid item xs={12}>\n            <ul>\n              <li>\n                <Typography variant=\"body1\" gutterBottom>This software is experimental and I use it at my own risk!</Typography>\n              </li>\n              <li>\n                <Typography variant=\"body1\" gutterBottom>Flashing firmware can fail and cause the ECU to become unusable.</Typography>\n              </li>\n              <li>\n                <Typography variant=\"body1\" gutterBottom>Only use this tool on an ECU that you are willing to pay to replace.</Typography>\n              </li>\n              <li>\n                <Typography variant=\"body1\" gutterBottom>Keep this browser window and tab open and focused during the flashing process.</Typography>\n              </li>\n              <li>\n                <Typography variant=\"body1\" gutterBottom>When something goes wrong try power cycling the ECU and reloading this website.</Typography>\n              </li>\n            </ul>\n          </Grid>\n          <Grid item xs={12}>\n            <Button variant=\"contained\" color=\"secondary\" fullWidth disabled={this.state.userAgreement} onClick={this.clickAgree}>I Agree and Understand</Button>\n          </Grid>\n          <Grid item xs={12}>\n            { this.state.status ? <hr /> : '' }\n          </Grid>\n          <Grid item xs={12}>\n            { this.state.status ? <Typography variant=\"subtitle2\">{this.state.status}</Typography> : '' }\n          </Grid>\n          <Grid item xs={12}>\n            { this.state.status ? <LinearProgress color=\"secondary\" variant=\"determinate\" value={this.state.progress} /> : '' }\n          </Grid>\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\n\nFlashFirmware.propTypes = {\n  classes: PropTypes.object.isRequired,\n  worker: PropTypes.object.isRequired,\n  onReceiveUserAgreement: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(FlashFirmware);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  donate: {\n    display: 'flex',\n    alignItems: 'center',\n    lineHeight: '1em',\n  },\n});\n\nclass Donate extends React.Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <React.Fragment>\n        <form action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\" target=\"_blank\" className={classes.donate}>\n          <input type=\"hidden\" name=\"cmd\" value=\"_s-xclick\" />\n          <input type=\"hidden\" name=\"hosted_button_id\" value=\"ZZ4ZRWAPSHJRY\" />\n          <input id=\"donate-button\" type=\"image\" src=\"https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif\" border=\"0\" name=\"submit\" title=\"PayPal - The safer, easier way to pay online!\" alt=\"Donate with PayPal button\" />\n          <img alt=\"\" border=\"0\" src=\"https://www.paypal.com/en_US/i/scr/pixel.gif\" width=\"1\" height=\"1\" />\n          <label htmlFor=\"donate-button\" style={{paddingLeft: \"8px\"}}>Support open source software and help keep this website alive!</label>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nDonate.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Donate);\n","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport AppBar          from '@material-ui/core/AppBar';\nimport Button          from '@material-ui/core/Button';\nimport classNames      from 'classnames';\nimport CssBaseline     from '@material-ui/core/CssBaseline';\nimport IconButton      from '@material-ui/core/IconButton';\nimport SvgIcon         from '@material-ui/core/SvgIcon';\nimport MemoryIcon      from '@material-ui/icons/Memory';\nimport Paper           from '@material-ui/core/Paper';\nimport Stepper         from '@material-ui/core/Stepper';\nimport Step            from '@material-ui/core/Step';\nimport StepLabel       from '@material-ui/core/StepLabel';\nimport Toolbar         from '@material-ui/core/Toolbar';\nimport Typography      from '@material-ui/core/Typography';\nimport withStyles      from '@material-ui/core/styles/withStyles';\n\nimport { SnackbarProvider, withSnackbar } from 'notistack';\n\nimport EcuWorker       from './ecu.worker'\nimport SelectFirmware  from './components/SelectFirmware';\nimport CheckCompatible from './components/CheckCompatible';\nimport FlashFirmware   from './components/FlashFirmware';\nimport Donate          from './components/Donate'\n\nconst styles = theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  appBarLink: {\n    color: 'red',\n  },\n  layout: {\n    width: 'auto',\n    minWidth: \"600px\",\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  dangerMessage: {\n    fontWeight: 'bold',\n    backgroundColor: theme.palette.error.dark,\n    minWidth: 'unset',\n    maxWidth: 'unset',\n    borderRadius: 0,\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3,\n    },\n  },\n  stepper: {\n    padding: `${theme.spacing.unit * 3}px 0 ${theme.spacing.unit * 5}px`,\n  },\n  stepButtons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  stepButton: {\n    marginTop: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit,\n  },\n});\n\nconst steps = ['Select', 'Validate', 'Flash'];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.worker = new EcuWorker()\n  }\n\n  state = {\n    activeStep: 0,\n    firmwareFile: undefined,\n    ecuSoftwareVersion: undefined,\n    ecuCompatible: undefined,\n    userAgreement: false,\n    flashing: false,\n  };\n\n  _workerListener = (event) => {\n    if (!event || !event.data) {\n      return\n    }\n\n    var command = event.data.command\n    var result = event.data.result\n\n    switch (command) {\n      case 'error':\n        this.props.enqueueSnackbar(result.message, {\n          variant: 'error',\n          autoHideDuration: 10000,\n        });\n        break\n      default:\n        break\n    }\n  }\n\n  componentDidMount = () => {\n    this.worker.addEventListener('message', this._workerListener)\n  }\n\n  componentWillUnmount = () => {\n    this.worker.removeEventListener('message', this._workerListener)\n  }\n\n  getStepContent = (step) => {\n    switch (step) {\n      case 0:\n        return <SelectFirmware worker={this.worker} selectedFirmwareFile={this.state.firmwareFile} onReceiveFirmwareFile={this.onReceiveFirmwareFile} />;\n      case 1:\n        return <CheckCompatible worker={this.worker} onReceiveSoftwareVersion={this.onReceiveSoftwareVersion} onReceiveCompatible={this.onReceiveCompatible} />;\n      case 2:\n        return <FlashFirmware worker={this.worker} onReceiveUserAgreement={this.onReceiveUserAgreement} />;\n      default:\n        throw new Error('Unknown step');\n    }\n  }\n\n  onReceiveFirmwareFile = (file) => {\n    this.setState(state => ({\n      firmwareFile: file,\n      ecuSoftwareVersion: undefined,\n      ecuCompatible: undefined,\n      userAgreement: false,\n      flashing: false,\n    }))\n  }\n\n  onReceiveSoftwareVersion = (softwareVersion) => {\n    this.setState(state => ({\n      ecuSoftwareVersion: softwareVersion,\n      ecuCompatible: undefined,\n      userAgreement: false,\n      flashing: false,\n    }))\n  }\n\n  onReceiveCompatible = (compatible) => {\n    this.setState(state => ({\n      ecuCompatible: compatible,\n      userAgreement: false,\n      flashing: false,\n    }))\n  }\n\n  onReceiveUserAgreement = (agreement) => {\n    this.setState(state => ({\n      userAgreement: agreement,\n      flashing: false,\n    }))\n  }\n  \n  handleNext = async () => {\n    if (this.state.activeStep === 2) {\n      this.setState(state => ({\n        flashing: true,\n      }))\n      this.worker.postMessage({ command: 'flash' })\n      return\n    }\n\n    this.setState(state => ({\n      activeStep: state.activeStep + 1,\n    }));\n  };\n\n  handleBack = () => {\n    this.setState(state => ({\n      activeStep: state.activeStep - 1,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      activeStep: 0,\n    });\n  };\n\n  _shouldStep() {\n    if (this.state.activeStep === 0 && !this.state.firmwareFile) {\n      return true\n    }\n    else if (this.state.activeStep === 1 && !this.state.ecuCompatible) {\n      return true\n    }\n    else if (this.state.activeStep === 2 && (!this.state.userAgreement || this.state.flashing)) {\n      return true\n    }\n    return false\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { activeStep } = this.state;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <AppBar position=\"absolute\" className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow} noWrap>\n              <MemoryIcon className={classNames('memory-icon')}/> Flash ECUs from your web browser using a <a className={classes.appBarLink} target=\"blank\" href=\"https://comma.ai/shop/products/panda-obd-ii-dongle\">panda</a>!\n            </Typography>\n            <a href=\"https://github.com/gregjhogan/autoecu\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"GitHub repository\">\n              <IconButton\n                className={classes.button}\n                aria-label=\"GitHub repository\"\n              >\n                <SvgIcon style={{color: \"white\"}}>\n                  <path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path>\n                </SvgIcon>\n              </IconButton>\n            </a>\n          </Toolbar>\n        </AppBar>\n        <main className={classes.layout}>\n          <Paper className={classes.paper}>\n            <Stepper activeStep={activeStep} className={classes.stepper}>\n              {steps.map(label => (\n                <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                </Step>\n              ))}\n            </Stepper>\n            <React.Fragment>\n              {activeStep === steps.length ? (\n                <React.Fragment>\n                  <Typography variant=\"h5\" align=\"center\" gutterBottom>\n                    Complete!\n                  </Typography>\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  {this.getStepContent(activeStep)}\n                  <div className={classes.stepButtons}>\n                    {(\n                      <Button onClick={this.handleBack} className={classes.stepButton} disabled={activeStep === 0 || activeStep === 2}>\n                        Back\n                      </Button>\n                    )}\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={this.handleNext}\n                      className={classes.stepButton}\n                      disabled={this._shouldStep()}\n                    >\n                      {( activeStep === 2) ? 'Flash Firmware' : 'Next' }\n                    </Button>\n                  </div>\n                </React.Fragment>\n              )}\n            </React.Fragment>\n          </Paper>\n          <Donate />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n  enqueueSnackbar: PropTypes.func.isRequired,\n};\n\nconst AppWithSnackbar = withStyles(styles)(withSnackbar(App));\n\nfunction SnackbarProviderApp() {\n  return (\n    <SnackbarProvider\n      maxSnack={3}\n      action={[\n        <Button variant=\"contained\" size=\"small\">\n          Dismiss\n        </Button>\n      ]}\n    >\n      <AppWithSnackbar />\n    </SnackbarProvider>\n  );\n}\n\nexport default SnackbarProviderApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}