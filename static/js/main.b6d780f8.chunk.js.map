{"version":3,"sources":["ecu.worker.js","components/SecurityAccess.js","components/SelectFirmware.js","components/CheckCompatible.js","components/FlashFirmware.js","components/Donate.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Worker","__webpack_public_path__","SecurityAccess","state","cipherAlgorithmKey","undefined","securityAccessSeed","securityAccessKey","success","_workerListener","event","data","command","result","key","compatibleVersions","_this","props","ecuSoftwareVersion","setState","Buffer","from","onReceiveUnlock","componentDidMount","worker","addEventListener","postMessage","componentWillUnmount","removeEventListener","changeSecurityAccessKey","e","value","target","replace","_unused","clickUnlock","params","buf","concat","toString","classes","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Fragment","className","container","autoComplete","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_7___default","id","label","placeholder","textField","InputProps","readOnly","margin","_convertToHex","variant","helperText","onChange","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_8___default","color","disabled","onClick","button","React","Component","withStyles","theme","display","flexWrap","marginLeft","spacing","unit","marginRight","width","marginTop","SelectFirmware","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","manufacturer","file","manufacturerChange","onFileSelect","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","files","onReceiveFirmwareFile","stop","_x","apply","arguments","selectedFirmwareFile","name","action","react_default","Button_default","href","size","root","formWrapper","Grid_default","alignItems","item","xs","style","paddingBottom","FormControl_default","formControl","InputLabel_default","shrink","htmlFor","Select_default","inputProps","MenuItem_default","fullWidth","TextField_default","InputLabelProps","_getFileName","type","accept","input","component","SnackbarContent_default","snackbar","message","subtitle","marginBottom","minWidth","verticalAlign","CheckCompatible","firmwareValid","firmwareVersions","canAddress","softwareVersion","versionStatus","connected","supported","onReceiveCompatible","compatible","onReceiveSoftwareVersion","cmd","clickConnect","device","navigator","usb","requestDevice","filters","vendorId","sent","serialNumber","bool","version","status","greenAvatar","redAvatar","num","List_default","ListItem_default","Avatar_default","Check_default","Close_default","ListItemText_default","primary","secondary","_convertToValidStatus","DeviceHub_default","_convertToVersionStatus","Build_default","_convertToSofwareVersion","backgroundColor","green","red","FlashFirmware","userAgreement","progress","clickAgree","open","onReceiveUserAgreement","fontWeight","textAlign","Typography_default","gutterBottom","LinearProgress_default","Donate","method","donate","src","border","title","alt","height","paddingLeft","lineHeight","steps","App","activeStep","firmwareFile","ecuCompatible","ecuUnlocked","flashing","enqueueSnackbar","autoHideDuration","getStepContent","step","components_SelectFirmware","components_CheckCompatible","components_FlashFirmware","Error","unlocked","agreement","handleNext","abrupt","handleBack","handleReset","EcuWorker","CssBaseline_default","AppBar_default","position","appBar","Toolbar_default","grow","noWrap","Memory_default","classNames","appBarLink","rel","IconButton_default","aria-label","SvgIcon_default","d","layout","Paper_default","paper","Stepper_default","stepper","map","Step_default","StepLabel_default","length","align","stepButtons","stepButton","_shouldStep","components_Donate","AppWithSnackbar","defineProperty","breakpoints","up","flexGrow","dangerMessage","palette","error","dark","maxWidth","borderRadius","padding","justifyContent","withSnackbar","SnackbarProviderApp","build","maxSnack","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6d780f8.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"3f3944beb0f92e544cf7.worker.js\");\n};","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport withStyles      from '@material-ui/core/styles/withStyles';\nimport TextField       from '@material-ui/core/TextField';\nimport Button          from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n  button: {\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit,\n  },\n});\n\nclass SecurityAccess extends React.Component {\n  state = {\n    cipherAlgorithmKey: undefined,\n    securityAccessSeed: undefined,\n    securityAccessKey: undefined,\n    success: undefined,\n  }\n\n  _workerListener = (event) => {\n    if (!event || !event.data) {\n      return\n    }\n\n    var command = event.data.command\n    var result = event.data.result\n\n    switch (command) {\n      case 'get-firmware-info':\n        let key = result.compatibleVersions[this.props.ecuSoftwareVersion]\n        this.setState(state => ({\n          cipherAlgorithmKey: Buffer.from(key),\n        }))\n        break\n      case 'get-security-access-seed':\n        this.setState(state => ({securityAccessSeed: Buffer.from(result)}))\n        break\n      case 'unlock':\n        this.setState(state => ({success: result}))\n        this.props.onReceiveUnlock(result)\n        break\n      default:\n        break\n    }\n  }\n\n  componentDidMount = () => {\n    this.props.worker.addEventListener('message', this._workerListener)\n    this.props.worker.postMessage({ command: 'get-firmware-info' })\n    this.props.worker.postMessage({ command: 'get-security-access-seed' })\n  }\n\n  componentWillUnmount = () => {\n    this.props.worker.removeEventListener('message', this._workerListener)\n  }\n\n  changeSecurityAccessKey = (e) => {\n    var key = ''\n    try {\n      var value = e.target.value\n      key = Buffer.from(value.replace('0x',''), 'hex')\n    }\n    catch {}\n\n    this.setState((state) => ({ securityAccessKey: key }))\n  }\n\n  clickUnlock = () => {\n    this.props.worker.postMessage({ command: 'unlock', params: this.state.securityAccessKey })\n  }\n\n  _convertToHex(buf) {\n    return buf ? `0x${buf.toString('hex')}` : ''\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <form className={classes.container} autoComplete=\"off\">\n          <TextField\n            id=\"security-access-seed\"\n            label=\"Security Access Seed\"\n            placeholder=\"Placeholder\"\n            className={classes.textField}\n            InputProps={{\n              readOnly: true,\n            }}\n            margin=\"dense\"\n            value={this._convertToHex(this.state.securityAccessSeed)}\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"security-access-parameter\"\n            label=\"Cipher Algorithm Key\"\n            className={classes.textField}\n            InputProps={{\n              readOnly: true,\n            }}\n            margin=\"dense\"\n            value={this._convertToHex(this.state.cipherAlgorithmKey)}\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"security-access-key\"\n            label=\"Security Access key\"\n            placeholder=\"0x0000\"\n            className={classes.textField}\n            helperText=\"Enter Security Access Key\"\n            onChange={this.changeSecurityAccessKey}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            disabled={this.state.success}\n            onClick={this.clickUnlock}\n            className={classes.button}\n          >\n            Unlock\n          </Button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nSecurityAccess.propTypes = {\n  classes: PropTypes.object.isRequired,\n  worker: PropTypes.object.isRequired,\n  ecuSoftwareVersion: PropTypes.string.isRequired,\n  onReceiveUnlock: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(SecurityAccess);\n","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport withStyles      from '@material-ui/core/styles/withStyles';\nimport Grid            from '@material-ui/core/Grid'\nimport FormControl     from '@material-ui/core/FormControl';\nimport InputLabel      from '@material-ui/core/InputLabel';\nimport Select          from '@material-ui/core/Select';\nimport MenuItem        from '@material-ui/core/MenuItem';\nimport Button          from '@material-ui/core/Button';\nimport TextField       from '@material-ui/core/TextField';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nconst styles = theme => ({\n  subtitle: {\n    paddingBottom: theme.spacing.unit,\n  },\n  formWrapper: {\n    marginBottom: theme.spacing.unit * 2,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n    verticalAlign: 'baseline',\n  },\n  input: {\n    display: 'none',\n  },\n});\n\nclass SelectFirmware extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state.file = props.selectedFirmwareFile\n  }\n\n  state = {\n    manufacturer: \"honda\", // only one supported right now\n    file: undefined,\n  }\n\n  manufacturerChange = (e) => {\n    let value = e.target.value\n    this.setState(state => ({ manufacturer: value }))\n  }\n\n  onFileSelect = async (e) => {\n    var file = e.target.files[0]\n    this.setState(state => ({ file: file }))\n    this.props.worker.postMessage({ command: 'set-firmware-file', params: file })\n    this.props.onReceiveFirmwareFile(file)\n  }\n\n  _getFileName(file) {\n    return file ? file.name : \"\"\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    const action = (\n      <Button href=\"https://github.com/gregjhogan/rwd-xray\" target=\"_blank\" color=\"secondary\" size=\"small\">\n        More Information\n      </Button>\n    );\n\n    return (\n      <React.Fragment>\n        <div className={classes.root}>\n          <form autoComplete=\"off\" className={classes.formWrapper}>\n            <Grid container spacing={16} alignItems='baseline'>\n              <Grid item xs={12} style={{paddingBottom: 0}}>\n                <FormControl className={classes.formControl}>\n                  <InputLabel shrink htmlFor=\"manufacturer-select\">\n                    Manufacturer\n                  </InputLabel>\n                  <Select\n                    onChange={this.manufacturerChange}\n                    value={this.state.manufacturer}\n                    inputProps={{\n                      name: 'manufacturer',\n                      id: 'manufacturer-select',\n                    }}\n                  >\n                    <MenuItem value=\"honda\">Honda</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={9}>\n                <FormControl className={classes.formControl} fullWidth={true}>\n                  <TextField\n                    id=\"firmware-text-file\"\n                    label=\"Firmware File\"\n                    className={classes.textField}\n                    fullWidth={true}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    margin=\"dense\"\n                    placeholder=\"no file selected\"\n                    value={this._getFileName(this.state.file)}\n                  />\n                </FormControl>\n              </Grid>\n              <Grid item xs={3}>\n                <FormControl className={classes.formControl}>\n                  <input type=\"file\" id=\"firmware-button-file\" onChange={this.onFileSelect} accept=\".rwd\" className={classes.input} />\n                  <label htmlFor=\"firmware-button-file\">\n                    <Button variant=\"contained\" color=\"secondary\" component=\"span\">Select File</Button>\n                  </label>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12}>\n                <SnackbarContent className={classes.snackbar} message=\"Find out more about RWD files\" action={action} />\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nSelectFirmware.propTypes = {\n  classes: PropTypes.object.isRequired,\n  worker: PropTypes.object.isRequired,\n  onReceiveFirmwareFile: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(SelectFirmware);\n","import React         from 'react';\nimport PropTypes     from 'prop-types';\nimport Avatar        from '@material-ui/core/Avatar';\nimport BuildIcon     from '@material-ui/icons/Build';\n\nimport CheckIcon     from '@material-ui/icons/Check';\nimport CloseIcon     from '@material-ui/icons/Close';\nimport DeviceHubIcon from '@material-ui/icons/DeviceHub';\nimport List          from '@material-ui/core/List';\nimport ListItem      from '@material-ui/core/ListItem';\nimport ListItemText  from '@material-ui/core/ListItemText';\nimport withStyles    from '@material-ui/core/styles/withStyles';\n\nimport green         from '@material-ui/core/colors/green';\nimport red           from '@material-ui/core/colors/red';\nimport Button        from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  subtitle: {\n    paddingBottom: theme.spacing.unit,\n  },\n  greenAvatar: {\n    color: '#fff',\n    backgroundColor: green[500],\n  },\n  redAvatar: {\n    color: '#fff',\n    backgroundColor: red[500],\n  },\n  button: {\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit,\n  },\n});\n\nclass CheckCompatible extends React.Component {\n  state = {\n    firmwareValid: undefined,\n    firmwareVersions: undefined,\n    canAddress: '',\n    softwareVersion: undefined,\n    versionStatus: undefined,\n    connected: false,\n  }\n\n  _workerListener = (event) => {\n    if (!event || !event.data) {\n      return\n    }\n\n    var command = event.data.command\n    var result = event.data.result\n\n    switch (command) {\n      case 'get-firmware-info':\n        this.setState(state => ({\n          firmwareValid: result.supported,\n          firmwareVersions: result.compatibleVersions,\n          canAddress: result.canAddress,\n        }))\n        this.props.onReceiveCompatible(result.supported && result.canAddress && this.state.versionStatus)\n        break\n      case 'connect':\n        this.props.worker.postMessage({ command: 'get-app-software-id' })\n        if (!result) {\n          this.setState(state => ({ connected: false }))\n        }\n        break\n      case 'get-app-software-id':\n        let compatible = this.state.firmwareVersions && this.state.firmwareVersions[result]\n        this.setState(state => ({\n          softwareVersion: result,\n          versionStatus: compatible,\n        }))\n        this.props.onReceiveSoftwareVersion(result)\n        this.props.onReceiveCompatible(this.state.firmwareValid && this.state.canAddress && compatible)\n        break\n      case 'error':\n        if (result.cmd === 'connect') {\n          this.setState(state => ({\n            softwareVersion: undefined,\n            versionStatus: undefined,\n            connected: false,\n          }))\n        }\n        break\n      default:\n        break\n    }\n  }\n\n  componentDidMount = () => {\n    this.props.worker.addEventListener('message', this._workerListener)\n    this.props.worker.postMessage({ command: 'get-firmware-info' })\n  }\n\n  componentWillUnmount = () => {\n    this.props.worker.removeEventListener('message', this._workerListener)\n  }\n\n  clickConnect = async () => {\n    this.setState(state => ({ connected: true }))\n    // connecting to user device can only happen inside a click handler\n    let device = await navigator.usb.requestDevice({\n      filters: [{ vendorId: 0xbbaa }]\n    });\n    this.props.worker.postMessage({ command: 'connect', params: device.serialNumber })\n  }\n\n  _convertToValidStatus(bool) {\n    return bool ? 'Supported' : 'Unsupported'\n  }\n\n  _convertToSofwareVersion(connected, version) {\n    if (connected && version === undefined) {\n      return \"connecting ...\"\n    }\n    if (version === undefined) {\n      return \"not connected to ECU\"\n    }\n\n    return version || 'Not Found'\n  }\n\n  _convertToVersionStatus(status) {\n    if (status === undefined) {\n      return ''\n    }\n    return status ? this.props.classes.greenAvatar : this.props.classes.redAvatar\n  }\n\n  _convertToHex(num) {\n    return num ? `0x${num.toString(16)}` : ''\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <List className={classes.root}>\n        <ListItem>\n          {\n          this.state.firmwareValid ? (\n              <Avatar className={classes.greenAvatar}><CheckIcon /></Avatar>\n            ) : (\n              <Avatar className={classes.redAvatar}><CloseIcon /></Avatar>\n            )\n          }\n          <ListItemText primary=\"File Validation\" secondary={this._convertToValidStatus(this.state.firmwareValid)} /></ListItem>\n        <ListItem>\n          <Avatar className={this.state.canAddress === undefined ? classes.redAvatar : classes.greenAvatar}>\n            <DeviceHubIcon />\n          </Avatar>\n          <ListItemText primary=\"ECU Address\" secondary={this._convertToHex(this.state.canAddress)} />\n        </ListItem>\n        <ListItem>\n          <Avatar className={this._convertToVersionStatus(this.state.versionStatus)}>\n            <BuildIcon />\n          </Avatar>\n          <ListItemText primary=\"Software Version\" secondary={this._convertToSofwareVersion(this.state.connected, this.state.softwareVersion)} />\n          <Button variant=\"contained\" color=\"secondary\" disabled={this.state.connected} onClick={this.clickConnect}>Connect to ECU</Button>\n        </ListItem>\n      </List>\n    );\n  }\n}\n\nCheckCompatible.propTypes = {\n  classes: PropTypes.object.isRequired,\n  worker: PropTypes.object.isRequired,\n  onReceiveSoftwareVersion: PropTypes.func.isRequired,\n  onReceiveCompatible: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(CheckCompatible);\n","import React             from 'react';\nimport PropTypes         from 'prop-types';\nimport Button            from '@material-ui/core/Button';\nimport Grid              from '@material-ui/core/Grid';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport Typography        from '@material-ui/core/Typography';\nimport LinearProgress    from '@material-ui/core/LinearProgress';\nimport withStyles        from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n});\n\nclass FlashFirmware extends React.Component {\n  state = {\n    userAgreement: false,\n    status: undefined,\n    progress: undefined,\n    success: undefined,\n  }\n\n  _workerListener = (event) => {\n    if (!event || !event.data) {\n      return\n    }\n\n    var command = event.data.command\n    var result = event.data.result\n\n    switch (command) {\n      case 'flash':\n        this.setState(state => ({success: result}))\n        break\n      case 'flash-status':\n        this.setState(state => ({status: result}))\n        break\n      case 'flash-progress':\n        this.setState(state => ({progress: result}))\n        break\n      default:\n        break\n    }\n  }\n\n  componentDidMount = () => {\n    this.props.worker.addEventListener('message', this._workerListener)\n  }\n\n  componentWillUnmount = () => {\n    this.props.worker.removeEventListener('message', this._workerListener)\n  }\n\n  clickAgree = () => {\n    this.setState(state => ({\n      open: false,\n      userAgreement: true,\n      status: '',\n      progress: 0,\n    }))\n    this.props.onReceiveUserAgreement(true)\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <Grid container spacing={16}>\n          <Grid item xs={12}>\n            <SnackbarContent className={classes.snackbar} style={{fontWeight: 'bold', textAlign: 'center'}} message=\"DISCLAIMER\" />\n          </Grid>\n          <Grid item xs={12}>\n            <ul>\n              <li>\n                <Typography variant=\"body1\" gutterBottom>This software is experimental and I use it at my own risk!</Typography>\n              </li>\n              <li>\n                <Typography variant=\"body1\" gutterBottom>Flashing firmware can fail and cause the ECU to become unusable.</Typography>\n              </li>\n              <li>\n                <Typography variant=\"body1\" gutterBottom>Only use this tool on an ECU that you are willing to pay to replace.</Typography>\n              </li>\n              <li>\n                <Typography variant=\"body1\" gutterBottom>Keep this browser window and tab open and focused during the flashing process.</Typography>\n              </li>\n              <li>\n                <Typography variant=\"body1\" gutterBottom>When something goes wrong try power cycling the ECU and reloading this website.</Typography>\n              </li>\n            </ul>\n          </Grid>\n          <Grid item xs={12}>\n            <Button variant=\"contained\" color=\"secondary\" fullWidth disabled={this.state.userAgreement} onClick={this.clickAgree}>I Agree and Understand</Button>\n          </Grid>\n          <Grid item xs={12}>\n            { this.state.status ? <hr /> : '' }\n          </Grid>\n          <Grid item xs={12}>\n            { this.state.status ? <Typography variant=\"subtitle2\">{this.state.status}</Typography> : '' }\n          </Grid>\n          <Grid item xs={12}>\n            { this.state.status ? <LinearProgress color=\"secondary\" variant=\"determinate\" value={this.state.progress} /> : '' }\n          </Grid>\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\n\nFlashFirmware.propTypes = {\n  classes: PropTypes.object.isRequired,\n  worker: PropTypes.object.isRequired,\n  onReceiveUserAgreement: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(FlashFirmware);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  donate: {\n    display: 'flex',\n    alignItems: 'center',\n    lineHeight: '1em',\n  },\n});\n\nclass Donate extends React.Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <React.Fragment>\n        <form action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\" target=\"_blank\" className={classes.donate}>\n          <input type=\"hidden\" name=\"cmd\" value=\"_s-xclick\" />\n          <input type=\"hidden\" name=\"hosted_button_id\" value=\"ZZ4ZRWAPSHJRY\" />\n          <input id=\"donate-button\" type=\"image\" src=\"https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif\" border=\"0\" name=\"submit\" title=\"PayPal - The safer, easier way to pay online!\" alt=\"Donate with PayPal button\" />\n          <img alt=\"\" border=\"0\" src=\"https://www.paypal.com/en_US/i/scr/pixel.gif\" width=\"1\" height=\"1\" />\n          <label htmlFor=\"donate-button\" style={{paddingLeft: \"8px\"}}>Support open source software and help keep this website alive!</label>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nDonate.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Donate);\n","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport AppBar          from '@material-ui/core/AppBar';\nimport Button          from '@material-ui/core/Button';\nimport classNames      from 'classnames';\nimport CssBaseline     from '@material-ui/core/CssBaseline';\nimport IconButton      from '@material-ui/core/IconButton';\nimport SvgIcon         from '@material-ui/core/SvgIcon';\nimport MemoryIcon      from '@material-ui/icons/Memory';\nimport Paper           from '@material-ui/core/Paper';\nimport Stepper         from '@material-ui/core/Stepper';\nimport Step            from '@material-ui/core/Step';\nimport StepLabel       from '@material-ui/core/StepLabel';\nimport Toolbar         from '@material-ui/core/Toolbar';\nimport Typography      from '@material-ui/core/Typography';\nimport withStyles      from '@material-ui/core/styles/withStyles';\n\nimport { SnackbarProvider, withSnackbar } from 'notistack';\n\nimport EcuWorker       from './ecu.worker'\nimport SelectFirmware  from './components/SelectFirmware';\nimport CheckCompatible from './components/CheckCompatible';\nimport SecurityAccess  from './components/SecurityAccess';\nimport FlashFirmware   from './components/FlashFirmware';\nimport Donate          from './components/Donate'\n\nconst styles = theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  appBarLink: {\n    color: 'red',\n  },\n  layout: {\n    width: 'auto',\n    minWidth: \"600px\",\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  dangerMessage: {\n    fontWeight: 'bold',\n    backgroundColor: theme.palette.error.dark,\n    minWidth: 'unset',\n    maxWidth: 'unset',\n    borderRadius: 0,\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3,\n    },\n  },\n  stepper: {\n    padding: `${theme.spacing.unit * 3}px 0 ${theme.spacing.unit * 5}px`,\n  },\n  stepButtons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  stepButton: {\n    marginTop: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit,\n  },\n});\n\nconst steps = ['Select', 'Validate', 'Unlock', 'Flash'];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.worker = new EcuWorker()\n  }\n\n  state = {\n    activeStep: 0,\n    firmwareFile: undefined,\n    ecuSoftwareVersion: undefined,\n    ecuCompatible: undefined,\n    ecuUnlocked: undefined,\n    userAgreement: false,\n    flashing: false,\n  };\n\n  _workerListener = (event) => {\n    if (!event || !event.data) {\n      return\n    }\n\n    var command = event.data.command\n    var result = event.data.result\n\n    switch (command) {\n      case 'error':\n        this.props.enqueueSnackbar(result.message, {\n          variant: 'error',\n          autoHideDuration: 10000,\n        });\n        break\n      default:\n        break\n    }\n  }\n\n  componentDidMount = () => {\n    this.worker.addEventListener('message', this._workerListener)\n  }\n\n  componentWillUnmount = () => {\n    this.worker.removeEventListener('message', this._workerListener)\n  }\n\n  getStepContent = (step) => {\n    switch (step) {\n      case 0:\n        return <SelectFirmware worker={this.worker} selectedFirmwareFile={this.state.firmwareFile} onReceiveFirmwareFile={this.onReceiveFirmwareFile} />;\n      case 1:\n        return <CheckCompatible worker={this.worker} onReceiveSoftwareVersion={this.onReceiveSoftwareVersion} onReceiveCompatible={this.onReceiveCompatible} />;\n      case 2:\n        return <SecurityAccess worker={this.worker} ecuSoftwareVersion={this.state.ecuSoftwareVersion} onReceiveUnlock={this.onReceiveUnlock} />;\n      case 3:\n        return <FlashFirmware worker={this.worker} onReceiveUserAgreement={this.onReceiveUserAgreement} />;\n      default:\n        throw new Error('Unknown step');\n    }\n  }\n\n  onReceiveFirmwareFile = (file) => {\n    this.setState(state => ({\n      firmwareFile: file,\n      ecuSoftwareVersion: undefined,\n      ecuCompatible: undefined,\n      ecuUnlocked: false,\n      userAgreement: false,\n      flashing: false,\n    }))\n  }\n\n  onReceiveSoftwareVersion = (softwareVersion) => {\n    this.setState(state => ({\n      ecuSoftwareVersion: softwareVersion,\n      ecuCompatible: undefined,\n      ecuUnlocked: false,\n      userAgreement: false,\n      flashing: false,\n    }))\n  }\n\n  onReceiveCompatible = (compatible) => {\n    this.setState(state => ({\n      ecuCompatible: compatible,\n      ecuUnlocked: false,\n      userAgreement: false,\n      flashing: false,\n    }))\n  }\n\n  onReceiveUnlock = (unlocked) => {\n    this.setState(state => ({\n      ecuUnlocked: unlocked,\n      userAgreement: false,\n      flashing: false,\n    }))\n  }\n\n  onReceiveUserAgreement = (agreement) => {\n    this.setState(state => ({\n      userAgreement: agreement,\n      flashing: false,\n    }))\n  }\n  handleNext = async () => {\n    if (this.state.activeStep === 3) {\n      this.setState(state => ({\n        flashing: true,\n      }))\n      this.worker.postMessage({ command: 'flash' })\n      return\n    }\n\n    this.setState(state => ({\n      activeStep: state.activeStep + 1,\n    }));\n  };\n\n  handleBack = () => {\n    this.setState(state => ({\n      activeStep: state.activeStep - 1,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      activeStep: 0,\n    });\n  };\n\n  _shouldStep() {\n    if (this.state.activeStep === 0 && !this.state.firmwareFile) {\n      return true\n    }\n    else if (this.state.activeStep === 1 && !this.state.ecuCompatible) {\n      return true\n    }\n    else if (this.state.activeStep === 2 && !this.state.ecuUnlocked) {\n      return true\n    }\n    else if (this.state.activeStep === 3 && (!this.state.userAgreement || this.state.flashing)) {\n      return true\n    }\n    return false\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { activeStep } = this.state;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <AppBar position=\"absolute\" className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow} noWrap>\n              <MemoryIcon className={classNames('memory-icon')}/> Flash ECUs from your web browser using a <a className={classes.appBarLink} target=\"blank\" href=\"https://comma.ai/shop/products/panda-obd-ii-dongle\">panda</a>!\n            </Typography>\n            <a href=\"https://github.com/gregjhogan/autoecu\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"GitHub repository\">\n              <IconButton\n                className={classes.button}\n                aria-label=\"GitHub repository\"\n              >\n                <SvgIcon style={{color: \"white\"}}>\n                  <path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path>\n                </SvgIcon>\n              </IconButton>\n            </a>\n          </Toolbar>\n        </AppBar>\n        <main className={classes.layout}>\n          <Paper className={classes.paper}>\n            <Stepper activeStep={activeStep} className={classes.stepper}>\n              {steps.map(label => (\n                <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                </Step>\n              ))}\n            </Stepper>\n            <React.Fragment>\n              {activeStep === steps.length ? (\n                <React.Fragment>\n                  <Typography variant=\"h5\" align=\"center\" gutterBottom>\n                    Complete!\n                  </Typography>\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  {this.getStepContent(activeStep)}\n                  <div className={classes.stepButtons}>\n                    {(\n                      <Button onClick={this.handleBack} className={classes.stepButton} disabled={activeStep === 0 || activeStep === 2 || activeStep === 3}>\n                        Back\n                      </Button>\n                    )}\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={this.handleNext}\n                      className={classes.stepButton}\n                      disabled={this._shouldStep()}\n                    >\n                      {( activeStep === 3) ? 'Flash Firmware' : 'Next' }\n                    </Button>\n                  </div>\n                </React.Fragment>\n              )}\n            </React.Fragment>\n          </Paper>\n          <Donate />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n  enqueueSnackbar: PropTypes.func.isRequired,\n};\n\nconst AppWithSnackbar = withStyles(styles)(withSnackbar(App));\n\nfunction SnackbarProviderApp() {\n  return (\n    <SnackbarProvider\n      maxSnack={3}\n      action={[\n        <Button variant=\"contained\" size=\"small\">\n          Dismiss\n        </Button>\n      ]}\n    >\n      <AppWithSnackbar />\n    </SnackbarProvider>\n  );\n}\n\nexport default SnackbarProviderApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}